/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 .\public\Models\lampFloor.gltf -K -k 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import { fadeOnBeforeCompile } from '../utils/fadeMaterial';

export function LampFloor({ sceneOpacity, ...props }) {
  const { nodes, materials } = useGLTF('./Models/lampFloor.gltf')

  const materialRef = useRef();

  useFrame(() => {
    materialRef.current.opacity = sceneOpacity.current;
  });

  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <group name="BRASS" position={[0, 0.351, 0]} rotation={[-1.611, 0, 0]}>
          <mesh name="BRASS_1" geometry={nodes.BRASS_1.geometry}>
            <meshStandardMaterial
              ref={materialRef}
              onBeforeCompile={fadeOnBeforeCompile}
              envMapIntensity={2}
              transparent
            />
          </mesh>
          <mesh name="BRASS_2" geometry={nodes.BRASS_2.geometry}>
            <meshStandardMaterial
              ref={materialRef}
              onBeforeCompile={fadeOnBeforeCompile}
              envMapIntensity={2}
              transparent
            />
          </mesh>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('./Models/lampFloor.gltf')
