/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 .\public\Models\sofa.gltf -k -K 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { fadeOnBeforeCompile } from '../utils/fadeMaterial';
import { useFrame } from '@react-three/fiber';

export function Sofa({ sceneOpacity, ...props }) {
  const { nodes, materials } = useGLTF('./Models/sofa.gltf')

  const materialRef = useRef();

  useFrame(() => {
    materialRef.current.opacity = sceneOpacity.current;
  });

  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Sofa_lambert1_0" geometry={nodes.Sofa_lambert1_0.geometry}>
          <meshStandardMaterial
            ref={materialRef}
            onBeforeCompile={fadeOnBeforeCompile}
            envMapIntensity={2}
            transparent
          />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('./Models/sofa.gltf')
